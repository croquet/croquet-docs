This directory is a new document generator (but it is not newdocs) that uses jsdoc.

It accommodates multiple projects. Each project is a subdirectory. You need to install jsdoc, and you better have npm-watch.  Run `npm install` in this directory.

Create a new subdirectory to add a new project. Then, copy `jsdoc.json` and `package.json` from an existing project. In jsdoc.json, replace the "include" array with the .js and .md files that has your documentation.  `opts.tutorials` should point to a directory that has a series of .md files.  destination should be `../build/<your project>`.  (If your tutorial has additional files, `templates.staticFiles.include` needs to have them.  Change `docdash.meta` to change the title.

You don't actually have to run `npm install` in the project subdirectory.  It is there to specify what to do with npm-watch. npm-watch helps you to view the results of your edit faster: Change the list in `watch.build.patterns`, and then run `npm run watch` in a shell. Then editing a file listed in patterns would trigger re-generation of the html file tree in to the `build` directory in the project subdirectory . (You'd still have to reload.)

`build.sh` is called to make the directory that contains all projects. it copies `index.html` in this directory to `build` as the entry point for those project documents.

`deploy.sh` in general copies file over to `../../servers/croquet-io-dev/docs` or `docs-pre`. It takes `release`, `prerelease` or `docs` as an argument.

Each sub project can have its own version number. The version string of `packget.json` is used to substitute the `@CROQUET_VERSION` string in any generated html.

